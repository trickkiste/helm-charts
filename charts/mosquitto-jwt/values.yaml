replicaCount: 1
strategyType: Recreate

image:
  repository: eclipse-mosquitto
  tag: 1.6.12
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

service:
  type: ClusterIP
  externalTrafficPolicy:
  annotations: {}
    # metallb.universe.tf/allow-shared-ip: pi-hole

ingress:
  enabled: false
  annotations: {}
    #cert-manager.io/cluster-issuer: letsencrypt-cluster-prod
    #kubernetes.io/ingress.class: public
  hosts:
    - host: ""
      path: /
      port: 9001
    #- host: mqttjwt.example.com
    #  path: /
    #  port: 9002
  tls:
    - secretName: mqtt.example.com-tls
      hosts:
        - mqtt.example.com
    #- secretName: mqttjwt.example.com-tls
    #  hosts:
    #    - mqttjwt.example.com

ports:
  websocket:
    port: 9001
    protocol: TCP
    appProtocol: websockets
    configOptions: ""
#  jwt:
#    port: 9002
#    protocol: TCP
#    appProtocol: websockets
#    configOptions: |-
#      auth_plugin /mosquitto/jwt_auth.so
#      auth_opt_jwt_alg RS256
#      auth_opt_jwt_jwks_file /mosquitto/jwks.json
#      #auth_opt_jwt_sec_base64 d1ZRNkFLaXlUbjJsR0R6aTBtaE9qVXlKSDBWNE9XczZBNGg4WklBZG1sekNIc1ZRNTJRdk1JWXp6WFFHTjVjUmxwTnVmMUhDTjdwcFp6azBaQ3c5ZFlVbjBDMExYTnRlMkkxeVBtRE1JWS1rUDZoUXZTaVo4VXp2b3piSGRrMmRNOWo4NkZScWdRR3F3RThmX25TRTZLSWJ3d3A1angwckZkUzV4amphWUVENlJFM3U3SEdKY0IzSUhnWGFZdm56N1h3TkZ6azF5VlZhVUR4TWdveXBubDFzWXBQcFdpa2Rya0VLRDVsS1U5cmw5aXQ2NGpXa0NiWGk4Qm5hUFZiQlQ0VzIxelBuS2hKUVpnZENjYkZyYXlJQnVNM1R1M2l4cjR1YUNoUV94YmNYLXJVRktGNWt6X0QySjQzb3dSSHhmM2xfTllOSWd5NVhJcjI2TE1vMmN3
#      auth_opt_jwt_validate_exp true
#      auth_opt_jwt_validate_sub_match_username true
#      allow_anonymous false
  mqtt:
    port: 1883
    # sets consistent nodePort, required to set service.type=NodePort
    # nodePort: 31883
    protocol: TCP
    appProtocol: mqtt
    configOptions: ""

persistence:
  enabled: true
  accessMode: ReadWriteOnce
  existingClaim: ""
  mountPath: /mosquitto/data
  subPath: ""
  ## database data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  # storageClass: "-"
  size: 1Gi

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

podSecurityContext: {}
  # runAsUser: 1001
  # fsGroup: 10000

securityContext: {}
  # runAsUser: 1001
  # fsGroup: 10000

nodeSelector: {}

tolerations: []

affinity: {}

authentication:
  passwordEntries: ""
  # To use authentication with mosquitto, you can set a list of password entries to be used.
  # reference https://mosquitto.org/man/mosquitto_passwd-1.html to generate these entries.
  # For example:
  # passwordEntries: |-
  #   user1:$6$BKzw0RKerxV4Esbj$Uz5slWGB1TiOtYIEokEl0eR1YSEQAdKpcdRYMsLYbwjktlVzdLyGk41YCPGyMLnBePtdwPhkcm8kjGI0R9s57w==
  #   user2:$6$b5vYuHrSLj48Ii32$NjlbnatIaUQSsNvxxTpawpav6NPyZ8QhGrdEVGtyU1rgEGjNzVGKlstRg29FV6MFTPs/ugPA8D5I5+qRcIMXSg==
  passwordFilePath: "/mosquitto/config/passwordfile"

authorization:
  aclfilePath: "/mosquitto/config/aclfile"
  acls: ""
  # To use authorizations with mosquitto, you can set a list of per user or pattern-based rules.
  # reference https://mosquitto.org/man/mosquitto-conf-5.html for further information.
  # For example:
  # acls: |-
      #  topic readwrite #
      # zigbee2mqtt ACLs
      # user zigbee2mqtt
      # topic readwrite zigbee2mqtt/#
      # topic readwrite homeassistant/#
      # Tasmota-compatible ACLs
      # pattern read cmnd/%u/#
      # pattern write stat/%u/#
      # pattern write tele/%u/#

existingConfigMap: ""
config: |-
  per_listener_settings true
  persistence true
  persistence_location /mosquitto/data/
  log_dest stdout
  #allow_zero_length_clientid true
  #max_keepalive 15

## Additional volumes.
extraVolumes: []
  #- name: jwks
  #  secret:
  #    secretName: steadiq-mosquitto

## Additional volumeMounts to the main container.
extraVolumeMounts: []
  #- name: jwks
  #  mountPath: /mosquitto/jwks.json
  #  subPath: jwks.json

monitoring:
  podMonitor:
    enabled: false
  sidecar:
    enabled: false
    port: 9234
    # nodePort: 32234
    image:
      repository: nolte/mosquitto-exporter
      tag: v0.6.3
      pullPolicy: IfNotPresent
    resources:
      limits:
        cpu: 300m
        memory: 128Mi
      requests:
        cpu: 100m
        memory: 64Mi
